import { HEADERS } from "@/constants/report";
import { Reports } from "@/types/report";

export const reports: Reports = {
  noCoach: {
    label: "No Coach",
    api: "get-no-coach",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
    ],
  },
  coachNotCBO: {
    label: "Coach not in CBO",
    api: "get-coach-not-in-CBO",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
      HEADERS.coachName,
    ],
  },
  underCoaching: {
    label: "Under Coaching",
    api: "get-under-coaching",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
      HEADERS.numberCoachees,
    ],
  },
  overCoaching: {
    label: "Over Coaching",
    api: "get-over-coaching",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
      HEADERS.numberCoachees,
    ],
  },
  geoMismatch: {
    label: "Geography Mismatch",
    api: "get-geo-mismatch",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
      HEADERS.coachName,
      HEADERS.coachEmail,
      HEADERS.coachTG,
      HEADERS.coachLocation,
      HEADERS.coachPosition,
      HEADERS.coachStatus,
    ],
  },
  tgMismatch: {
    label: "Talent Group Mismatch",
    api: "get-tg-mismatch",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
      HEADERS.coachName,
      HEADERS.coachEmail,
      HEADERS.coachTG,
      HEADERS.coachLocation,
      HEADERS.coachPosition,
      HEADERS.coachStatus,
    ],
  },
  tgAndGeoMismatch: {
    label: "Geography and Talent Mismatch",
    api: "get-tg-geo-mismatch",
    headers: [
      HEADERS.employeeName,
      HEADERS.talentGroup,
      HEADERS.position,
      HEADERS.location,
      HEADERS.email,
      HEADERS.status,
      HEADERS.coachName,
      HEADERS.coachEmail,
      HEADERS.coachTG,
      HEADERS.coachLocation,
      HEADERS.coachPosition,
      HEADERS.coachStatus,
    ],
  },
  highSeniorityGap: {
    label: "High Seniority Gaps",
    api: "get-high-seniority-gap",
    headers: [
      HEADERS.employeeName,
      HEADERS.position,
      HEADERS.talentGroup,
      HEADERS.coacheeName,
      HEADERS.coacheePosition,
      HEADERS.coacheeTG,
    ],
  },
};
